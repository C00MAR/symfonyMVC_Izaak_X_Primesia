{% extends 'base.html.twig' %}

{% block title %}{{ 'product.list_title'|trans }}{% endblock %}

{% block body %}
    <div class="productsPage">
        <div class="productsPage__titleAndSubtitle">
            <h1 class="productsPage__title">{{ 'product.list_title'|trans }}</h1>
            <p class="productsPage__subtitle">{{ 'product.list_subtitle'|trans }}</p>
        </div>

        <div class="productsPage__filtersSection">
            <h2 class="productsPage__filtersTitle">FILTER</h2>
            <div class="productsPage__filtersContainer">
                <button class="buttonPrimary active" data-filter="all">{{ 'product.filter.all'|trans }}</button>
                <button class="buttonPrimary" data-filter="red-wine">{{ 'product.filter.redwine'|trans }}</button>
                <button class="buttonPrimary" data-filter="white-wine">{{ 'product.filter.whitewine'|trans }}</button>
                <button class="buttonPrimary" data-filter="red-wine-&-white-wine">{{ 'product.filter.rednwhitewine'|trans }}</button>
                <button class="buttonPrimary" data-filter="sparkling-wine">{{ 'product.filter.sparkling'|trans }}</button>
                <button class="buttonPrimary" data-filter="spirits">{{ 'product.filter.spirits'|trans }}</button>
                <button class="buttonPrimary" data-filter="water">{{ 'product.filter.water'|trans }}</button>
            </div>
        </div>

        <div class="productsPage__grid">
            {% if products is empty %}
                <div class="productsPage__noProducts">
                    <p>{{ 'Aucun produit disponible'|trans }}</p>
                </div>
            {% else %}
                {% for product in products %}
                    <a href="{{ path('app_product_show', {id: product.id}) }}" class="productsPage__cardLink" data-category="{{ product.category|lower|replace({' ': '-'}) }}">
                        <div class="productsPage__card">
                            <div class="productsPage__cardImageContainer">
                                {% if product.hasImages %}
                                    <img src="{{ asset(product.firstImagePath) }}" 
                                        alt="{{ product.name }}" 
                                        class="productsPage__cardImage">
                                {% else %}
                                    <div class="productsPage__cardNoImage">
                                        <img src="{{ asset('img/placeholder-product.jpeg') }}" 
                                            alt="{{ product.name }}" 
                                            class="productsPage__image productsPage__image--placeholder">
                                    </div>
                                {% endif %}
                            </div>
                            
                            <div class="productsPage__cardInfo">
                                <p class="productsPage__cardProductName">{{ product.name }}</h3>
                                <div class="productsPage__cardProductDetails">
                                    <span class="productsPage__cardProductPrice">{{ product.price }} PTS</span>
                                    <div class="productsPage__cardActions">
                                        <p class="productsPage__cardActionsDetails fakelink">Detail</p>
                                        {% if app.user and app.user.actif and app.user.points >= product.price %}
                                            <form method="post" action="{{ path('app_purchase', {id: product.id}) }}" class="buy-form">
                                                <button type="submit" class="productsPage__cardActionsBuy fakelink">Buy</button>
                                            </form>
                                        {% else %}
                                            <button class="productsPage__cardActionsBuy fakelink disabled" disabled>Buy</button>
                                        {% endif %}
                                    </div>
                                </div>
                            </div>
                        </div>
                    </a>
                {% else %}
                    <div class="no-products">
                        <p>{{ 'Aucun produit disponible'|trans }}</p>
                    </div>
                {% endfor %}
            {% endif %}
        </div>
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const filterBtns = document.getElementsByClassName('productsPage__filtersContainer')[0].querySelectorAll('.buttonPrimary');
            const productCards = document.querySelectorAll('.productsPage__cardLink');

            filterBtns.forEach(btn => {
                btn.addEventListener('click', function() {
                    const filter = this.getAttribute('data-filter');
                    
                    filterBtns.forEach(b => b.classList.remove('active'));
                    this.classList.add('active');

                    productCards.forEach(card => {
                        const category = card.getAttribute('data-category');
                        
                        if (filter === 'all' || category.includes(filter)) {
                            card.style.display = 'block';
                            card.style.animation = 'fadeInUp 0.6s ease forwards';
                        } else {
                            card.style.display = 'none';
                        }
                    });
                });
            });

            const observerOptions = {
                threshold: 0.1,
                rootMargin: '0px 0px -50px 0px'
            };

            const observer = new IntersectionObserver(function(entries) {
                entries.forEach(entry => {
                    if (entry.isIntersecting) {
                        entry.target.style.animationDelay = '0s';
                        entry.target.style.animation = 'fadeInUp 0.6s ease forwards';
                    }
                });
            }, observerOptions);

            productCards.forEach(card => {
                observer.observe(card);
            });
        });
    </script>
{% endblock %}
